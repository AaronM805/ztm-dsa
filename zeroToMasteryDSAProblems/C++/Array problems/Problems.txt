LongestWord.cpp
	Have the function LongestWord(sen) take the sen parameter being passedand
	return the largest word in the string.If there are two or more words that 
	are the same length, return the first word from the string with that
	length. Ignore punctuation and assume sen will not be empty.

	Examples
	Input : "fun&!! time"
	Output : time
	Input : "I love dogs"
	Output : love

=============================================================================
TwoSum.cpp
	Given an array of integers numsand an integer target, return indices of
	the two numbers such that they add up to target.
	You may assume that each input would have exactly one solution, and you 
	may not use the same element twice.
	You can return the answer in any order.

=============================================================================
MaximumSubArraySum.cpp

	Given an integer array nums, find the contiguous subarray
	(containing at least one number) which has the largest sum and return its 
    sum.

	Example 1:

	Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
	Output: 6
	Explanation: [4,-1,2,1] has the largest sum = 6.

==============================================================================
MoveZeroes.cpp
	Given an array nums, write a function to move all 0's to the end of it 
	while maintaining the relative order of the non-zero elements.

	Example:

	Input: [0,1,0,3,12]
	Output: [1,3,12,0,0]

==============================================================================
DuplicateElements.cpp
	Given an array of integers, find if the array contains any duplicates.

	Your function should return true if any value appears at least twice in the
	array, and it should return false if every element is distinct.

	Example 1:

	Input: [1,2,3,1]
	Output: true

	Example 2:

	Input: [1,2,3,4]
	Output: false

==============================================================================
RotateArray.cpp
	Given an array, rotate the array to the right by k steps, where k is 
    non-negative.
	 
	Example 1:

	Input: nums = [1,2,3,4,5,6,7], k = 3
	Output: [5,6,7,1,2,3,4]
	Explanation:
	rotate 1 steps to the right: [7,1,2,3,4,5,6]
	rotate 2 steps to the right: [6,7,1,2,3,4,5]
	rotate 3 steps to the right: [5,6,7,1,2,3,4]

